# -*- coding: utf-8 -*-
"""
Created on Thu Dec 14 15:13:22 2017

@author: David Cartbo
"""

import Crypto
from Crypto.PublicKey import RSA
import base64

p = '00C7A6919E8AD40F6273BA5528F638A1567C1DA99CE26981F04959DC9A848E08DF162BE7B2FA85D63E6E6778E62A3EA4CF5BA903210A88C45AC445EFBD9AEA36C7'
q = '00DCBB40D01F3200BE66B31FB0A18CCFD0B424BB8D533EFA658BFDC0E9B030BD765460DA58A8DA83BBCC2C5784827D5ABA9861F1E9B619024CAF7990DD5043356D'
e = '5ED985B7FFDC4DEBF2DA97BDA5A84209A787A11B0BF647BDE80FD7634B0B03ED2F26E4625491A9BEF24963E6EAA32C31354E5CF07F781CFE170C712C1F6B957D1C70521CCDD4B11FC3EFFF83451506F4FEFB5F3D6C3552F83315FBF5954BC0D017CC5E644AE25CDE9641FB938E115456DAE755301791258200F045321C304D71'

p = int(p,16)
q = int(q,16)
e = int(e,16)

mod = p*q

key = RSA.construct([mod,65537,e])


#https://lapo.it/asn1js
msg = 'T9FAfFVcVCdPH45kv3OU/Kot9NOyQ2t5tWI1GW6nJ4Ul435T68wq1f1vm3KhDcKONzdN3krJ/VwlIzdssIcqmVizw5mnMupmd1gNmf7EKLZWjT4LaMQhDMijrfhxCdbiQKjKqYnUehlOCeDS0JXOJpiYcCtbmTVYHBmxBuOZ1l8='

decoded = base64.b64decode(msg)
#decoded = str(decoded, errors='ignore')
#print(decoded)

decrypted = key.decrypt(decoded)

print(decrypted)





"""

decoded = base64.b64decode(msg)
decoded = int.from_bytes(decoded,'big')


decrypted = pow(decoded,e,mod)
decrypted = decrypted.to_bytes((decrypted.bit_length() + 7) // 8, 'big')
print(decrypted.decode('UTF-8'))
"""